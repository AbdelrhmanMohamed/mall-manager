// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.POSPck.AllShopsRequest', null, global);
goog.exportSymbol('proto.POSPck.AllShopsResponse', null, global);
goog.exportSymbol('proto.POSPck.Areas', null, global);
goog.exportSymbol('proto.POSPck.DashboardCountsRequest', null, global);
goog.exportSymbol('proto.POSPck.DashboardCountsResponse', null, global);
goog.exportSymbol('proto.POSPck.DatasetCounts', null, global);
goog.exportSymbol('proto.POSPck.EmptyMessage', null, global);
goog.exportSymbol('proto.POSPck.FILTER', null, global);
goog.exportSymbol('proto.POSPck.ForgetRequest', null, global);
goog.exportSymbol('proto.POSPck.ForgetResponse', null, global);
goog.exportSymbol('proto.POSPck.GetUserProfileResponse', null, global);
goog.exportSymbol('proto.POSPck.LoginRequest', null, global);
goog.exportSymbol('proto.POSPck.LoginResponse', null, global);
goog.exportSymbol('proto.POSPck.MallStructureResponse', null, global);
goog.exportSymbol('proto.POSPck.MessageResponse', null, global);
goog.exportSymbol('proto.POSPck.RenterInfo', null, global);
goog.exportSymbol('proto.POSPck.SHOP_STATUS', null, global);
goog.exportSymbol('proto.POSPck.Shop', null, global);
goog.exportSymbol('proto.POSPck.ShopInvoicResponse', null, global);
goog.exportSymbol('proto.POSPck.ShopInvoicesRequest', null, global);
goog.exportSymbol('proto.POSPck.ShopRequest', null, global);
goog.exportSymbol('proto.POSPck.ShopResponse', null, global);
goog.exportSymbol('proto.POSPck.StatsRequest', null, global);
goog.exportSymbol('proto.POSPck.StatsResponse', null, global);
goog.exportSymbol('proto.POSPck.StatsWithDescResponse', null, global);
goog.exportSymbol('proto.POSPck.TransactionsOfInvoiceRequest', null, global);
goog.exportSymbol('proto.POSPck.TransactionsOfInvoiceRespone', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.EmptyMessage.displayName = 'proto.POSPck.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.LoginRequest.displayName = 'proto.POSPck.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.LoginResponse.displayName = 'proto.POSPck.LoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ForgetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ForgetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ForgetRequest.displayName = 'proto.POSPck.ForgetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ForgetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ForgetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ForgetResponse.displayName = 'proto.POSPck.ForgetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.GetUserProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.GetUserProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.GetUserProfileResponse.displayName = 'proto.POSPck.GetUserProfileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ShopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ShopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ShopRequest.displayName = 'proto.POSPck.ShopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ShopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ShopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ShopResponse.displayName = 'proto.POSPck.ShopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.RenterInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.RenterInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.RenterInfo.displayName = 'proto.POSPck.RenterInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.DashboardCountsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.DashboardCountsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.DashboardCountsRequest.displayName = 'proto.POSPck.DashboardCountsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.DashboardCountsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.DashboardCountsResponse.repeatedFields_, null);
};
goog.inherits(proto.POSPck.DashboardCountsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.DashboardCountsResponse.displayName = 'proto.POSPck.DashboardCountsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.StatsWithDescResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.StatsWithDescResponse.repeatedFields_, null);
};
goog.inherits(proto.POSPck.StatsWithDescResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.StatsWithDescResponse.displayName = 'proto.POSPck.StatsWithDescResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.StatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.StatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.StatsRequest.displayName = 'proto.POSPck.StatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.StatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.StatsResponse.repeatedFields_, null);
};
goog.inherits(proto.POSPck.StatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.StatsResponse.displayName = 'proto.POSPck.StatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.DatasetCounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.DatasetCounts.repeatedFields_, null);
};
goog.inherits(proto.POSPck.DatasetCounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.DatasetCounts.displayName = 'proto.POSPck.DatasetCounts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ShopInvoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ShopInvoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ShopInvoicesRequest.displayName = 'proto.POSPck.ShopInvoicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.ShopInvoicResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.ShopInvoicResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.ShopInvoicResponse.displayName = 'proto.POSPck.ShopInvoicResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.TransactionsOfInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.TransactionsOfInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.TransactionsOfInvoiceRequest.displayName = 'proto.POSPck.TransactionsOfInvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.TransactionsOfInvoiceRespone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.TransactionsOfInvoiceRespone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.TransactionsOfInvoiceRespone.displayName = 'proto.POSPck.TransactionsOfInvoiceRespone';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.MallStructureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.MallStructureResponse.repeatedFields_, null);
};
goog.inherits(proto.POSPck.MallStructureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.MallStructureResponse.displayName = 'proto.POSPck.MallStructureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.Areas = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.Areas, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.Areas.displayName = 'proto.POSPck.Areas';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.AllShopsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.AllShopsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.AllShopsRequest.displayName = 'proto.POSPck.AllShopsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.AllShopsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.POSPck.AllShopsResponse.repeatedFields_, null);
};
goog.inherits(proto.POSPck.AllShopsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.AllShopsResponse.displayName = 'proto.POSPck.AllShopsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.Shop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.Shop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.Shop.displayName = 'proto.POSPck.Shop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.POSPck.MessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.POSPck.MessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.POSPck.MessageResponse.displayName = 'proto.POSPck.MessageResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.EmptyMessage}
 */
proto.POSPck.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.EmptyMessage;
  return proto.POSPck.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.EmptyMessage}
 */
proto.POSPck.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.LoginRequest}
 */
proto.POSPck.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.LoginRequest;
  return proto.POSPck.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.LoginRequest}
 */
proto.POSPck.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string Username = 1;
 * @return {string}
 */
proto.POSPck.LoginRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginRequest.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Email = 2;
 * @return {string}
 */
proto.POSPck.LoginRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Password = 3;
 * @return {string}
 */
proto.POSPck.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginRequest} returns this
 */
proto.POSPck.LoginRequest.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginRequest.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    activated: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    expiresat: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    isMallmanager: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    isShopmanager: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    shopid: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.LoginResponse}
 */
proto.POSPck.LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.LoginResponse;
  return proto.POSPck.LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.LoginResponse}
 */
proto.POSPck.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActivated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiresat(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMallmanager(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsShopmanager(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.LoginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.LoginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * required string Token = 1;
 * @return {string}
 */
proto.POSPck.LoginResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool Activated = 2;
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.getActivated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setActivated = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearActivated = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasActivated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Name = 3;
 * @return {string}
 */
proto.POSPck.LoginResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string ExpiresAt = 4;
 * @return {string}
 */
proto.POSPck.LoginResponse.prototype.getExpiresat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setExpiresat = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearExpiresat = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasExpiresat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required bool Is_MallManager = 5;
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.getIsMallmanager = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setIsMallmanager = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearIsMallmanager = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasIsMallmanager = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required bool Is_ShopManager = 6;
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.getIsShopmanager = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setIsShopmanager = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearIsShopmanager = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasIsShopmanager = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 ShopID = 7;
 * @return {number}
 */
proto.POSPck.LoginResponse.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.LoginResponse} returns this
 */
proto.POSPck.LoginResponse.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.LoginResponse.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ForgetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ForgetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ForgetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ForgetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ForgetRequest}
 */
proto.POSPck.ForgetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ForgetRequest;
  return proto.POSPck.ForgetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ForgetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ForgetRequest}
 */
proto.POSPck.ForgetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ForgetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ForgetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ForgetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ForgetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Username = 1;
 * @return {string}
 */
proto.POSPck.ForgetRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ForgetRequest} returns this
 */
proto.POSPck.ForgetRequest.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ForgetRequest} returns this
 */
proto.POSPck.ForgetRequest.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ForgetRequest.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Email = 2;
 * @return {string}
 */
proto.POSPck.ForgetRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ForgetRequest} returns this
 */
proto.POSPck.ForgetRequest.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ForgetRequest} returns this
 */
proto.POSPck.ForgetRequest.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ForgetRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ForgetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ForgetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ForgetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ForgetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    token: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ForgetResponse}
 */
proto.POSPck.ForgetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ForgetResponse;
  return proto.POSPck.ForgetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ForgetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ForgetResponse}
 */
proto.POSPck.ForgetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ForgetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ForgetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ForgetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ForgetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Message = 1;
 * @return {string}
 */
proto.POSPck.ForgetResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ForgetResponse} returns this
 */
proto.POSPck.ForgetResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ForgetResponse} returns this
 */
proto.POSPck.ForgetResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ForgetResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string Token = 2;
 * @return {string}
 */
proto.POSPck.ForgetResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ForgetResponse} returns this
 */
proto.POSPck.ForgetResponse.prototype.setToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ForgetResponse} returns this
 */
proto.POSPck.ForgetResponse.prototype.clearToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ForgetResponse.prototype.hasToken = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.GetUserProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.GetUserProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.GetUserProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.GetUserProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    mobileno: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    activated: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    isMallmanager: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    isShopmanager: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    jobtitle: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    shopid: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.GetUserProfileResponse}
 */
proto.POSPck.GetUserProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.GetUserProfileResponse;
  return proto.POSPck.GetUserProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.GetUserProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.GetUserProfileResponse}
 */
proto.POSPck.GetUserProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActivated(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMallmanager(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsShopmanager(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobtitle(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.GetUserProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.GetUserProfileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.GetUserProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.GetUserProfileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * required int64 ID = 1;
 * @return {number}
 */
proto.POSPck.GetUserProfileResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string Name = 2;
 * @return {string}
 */
proto.POSPck.GetUserProfileResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Email = 3;
 * @return {string}
 */
proto.POSPck.GetUserProfileResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string MobileNo = 4;
 * @return {string}
 */
proto.POSPck.GetUserProfileResponse.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setMobileno = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearMobileno = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasMobileno = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string Password = 5;
 * @return {string}
 */
proto.POSPck.GetUserProfileResponse.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool Activated = 6;
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.getActivated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setActivated = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearActivated = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasActivated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool Is_MallManager = 7;
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.getIsMallmanager = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setIsMallmanager = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearIsMallmanager = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasIsMallmanager = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool Is_ShopManager = 8;
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.getIsShopmanager = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setIsShopmanager = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearIsShopmanager = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasIsShopmanager = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string JobTitle = 9;
 * @return {string}
 */
proto.POSPck.GetUserProfileResponse.prototype.getJobtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setJobtitle = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearJobtitle = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasJobtitle = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 ShopID = 10;
 * @return {number}
 */
proto.POSPck.GetUserProfileResponse.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.GetUserProfileResponse} returns this
 */
proto.POSPck.GetUserProfileResponse.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.GetUserProfileResponse.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ShopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ShopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ShopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ShopRequest}
 */
proto.POSPck.ShopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ShopRequest;
  return proto.POSPck.ShopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ShopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ShopRequest}
 */
proto.POSPck.ShopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ShopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ShopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ShopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 ShopID = 1;
 * @return {number}
 */
proto.POSPck.ShopRequest.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopRequest} returns this
 */
proto.POSPck.ShopRequest.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopRequest} returns this
 */
proto.POSPck.ShopRequest.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopRequest.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ShopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ShopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ShopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    shopid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    shoparea: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    shoptype: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    tmgpercentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    contractstart: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    contractend: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ShopResponse}
 */
proto.POSPck.ShopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ShopResponse;
  return proto.POSPck.ShopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ShopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ShopResponse}
 */
proto.POSPck.ShopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShoparea(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShoptype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTmgpercentage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractstart(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ShopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ShopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ShopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * required int64 ShopName = 1;
 * @return {number}
 */
proto.POSPck.ShopResponse.prototype.getShopname = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setShopname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearShopname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasShopname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 ShopID = 2;
 * @return {number}
 */
proto.POSPck.ShopResponse.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 ShopArea = 3;
 * @return {number}
 */
proto.POSPck.ShopResponse.prototype.getShoparea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setShoparea = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearShoparea = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasShoparea = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 ShopType = 4;
 * @return {number}
 */
proto.POSPck.ShopResponse.prototype.getShoptype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setShoptype = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearShoptype = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasShoptype = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float TmgPercentage = 5;
 * @return {number}
 */
proto.POSPck.ShopResponse.prototype.getTmgpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setTmgpercentage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearTmgpercentage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasTmgpercentage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ContractStart = 6;
 * @return {string}
 */
proto.POSPck.ShopResponse.prototype.getContractstart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setContractstart = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearContractstart = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasContractstart = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string ContractEnd = 7;
 * @return {string}
 */
proto.POSPck.ShopResponse.prototype.getContractend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.setContractend = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopResponse} returns this
 */
proto.POSPck.ShopResponse.prototype.clearContractend = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopResponse.prototype.hasContractend = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.RenterInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.RenterInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.RenterInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.RenterInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    rentername: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    renterid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    phone: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    percentage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    tmgpercentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    contractstart: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    contractend: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    tradename: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    email: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    password: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.RenterInfo}
 */
proto.POSPck.RenterInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.RenterInfo;
  return proto.POSPck.RenterInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.RenterInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.RenterInfo}
 */
proto.POSPck.RenterInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRentername(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRenterid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPhone(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPercentage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTmgpercentage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractstart(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractend(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradename(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.RenterInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.RenterInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.RenterInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.RenterInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * required int64 RenterName = 1;
 * @return {number}
 */
proto.POSPck.RenterInfo.prototype.getRentername = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setRentername = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearRentername = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasRentername = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 RenterID = 2;
 * @return {number}
 */
proto.POSPck.RenterInfo.prototype.getRenterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setRenterid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearRenterid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasRenterid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 Phone = 3;
 * @return {number}
 */
proto.POSPck.RenterInfo.prototype.getPhone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setPhone = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearPhone = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 Percentage = 4;
 * @return {number}
 */
proto.POSPck.RenterInfo.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setPercentage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearPercentage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float TmgPercentage = 5;
 * @return {number}
 */
proto.POSPck.RenterInfo.prototype.getTmgpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setTmgpercentage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearTmgpercentage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasTmgpercentage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ContractStart = 6;
 * @return {string}
 */
proto.POSPck.RenterInfo.prototype.getContractstart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setContractstart = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearContractstart = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasContractstart = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string ContractEnd = 7;
 * @return {string}
 */
proto.POSPck.RenterInfo.prototype.getContractend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setContractend = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearContractend = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasContractend = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string TradeName = 8;
 * @return {string}
 */
proto.POSPck.RenterInfo.prototype.getTradename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setTradename = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearTradename = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasTradename = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string Email = 9;
 * @return {string}
 */
proto.POSPck.RenterInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string Password = 10;
 * @return {string}
 */
proto.POSPck.RenterInfo.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.setPassword = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.RenterInfo} returns this
 */
proto.POSPck.RenterInfo.prototype.clearPassword = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.RenterInfo.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.DashboardCountsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.DashboardCountsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.DashboardCountsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DashboardCountsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    datefrom: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dateto: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.DashboardCountsRequest}
 */
proto.POSPck.DashboardCountsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.DashboardCountsRequest;
  return proto.POSPck.DashboardCountsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.DashboardCountsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.DashboardCountsRequest}
 */
proto.POSPck.DashboardCountsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatefrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.DashboardCountsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.DashboardCountsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.DashboardCountsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DashboardCountsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string DateFrom = 1;
 * @return {string}
 */
proto.POSPck.DashboardCountsRequest.prototype.getDatefrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.DashboardCountsRequest} returns this
 */
proto.POSPck.DashboardCountsRequest.prototype.setDatefrom = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsRequest} returns this
 */
proto.POSPck.DashboardCountsRequest.prototype.clearDatefrom = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsRequest.prototype.hasDatefrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DateTo = 2;
 * @return {string}
 */
proto.POSPck.DashboardCountsRequest.prototype.getDateto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.DashboardCountsRequest} returns this
 */
proto.POSPck.DashboardCountsRequest.prototype.setDateto = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsRequest} returns this
 */
proto.POSPck.DashboardCountsRequest.prototype.clearDateto = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsRequest.prototype.hasDateto = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.DashboardCountsResponse.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.DashboardCountsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.DashboardCountsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.DashboardCountsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DashboardCountsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalsales: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    refunds: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    tmgpercentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    tmgamount: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    popularcategoriesList: jspb.Message.toObjectList(msg.getPopularcategoriesList(),
    proto.POSPck.StatsWithDescResponse.toObject, includeInstance),
    customertrafficList: jspb.Message.toObjectList(msg.getCustomertrafficList(),
    proto.POSPck.StatsWithDescResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.DashboardCountsResponse}
 */
proto.POSPck.DashboardCountsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.DashboardCountsResponse;
  return proto.POSPck.DashboardCountsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.DashboardCountsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.DashboardCountsResponse}
 */
proto.POSPck.DashboardCountsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalsales(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefunds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTmgpercentage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTmgamount(value);
      break;
    case 5:
      var value = new proto.POSPck.StatsWithDescResponse;
      reader.readMessage(value,proto.POSPck.StatsWithDescResponse.deserializeBinaryFromReader);
      msg.addPopularcategories(value);
      break;
    case 6:
      var value = new proto.POSPck.StatsWithDescResponse;
      reader.readMessage(value,proto.POSPck.StatsWithDescResponse.deserializeBinaryFromReader);
      msg.addCustomertraffic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.DashboardCountsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.DashboardCountsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.DashboardCountsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DashboardCountsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPopularcategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.POSPck.StatsWithDescResponse.serializeBinaryToWriter
    );
  }
  f = message.getCustomertrafficList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.POSPck.StatsWithDescResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional double TotalSales = 1;
 * @return {number}
 */
proto.POSPck.DashboardCountsResponse.prototype.getTotalsales = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.setTotalsales = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearTotalsales = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsResponse.prototype.hasTotalsales = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double Refunds = 2;
 * @return {number}
 */
proto.POSPck.DashboardCountsResponse.prototype.getRefunds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.setRefunds = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearRefunds = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsResponse.prototype.hasRefunds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float TMGPercentage = 3;
 * @return {number}
 */
proto.POSPck.DashboardCountsResponse.prototype.getTmgpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.setTmgpercentage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearTmgpercentage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsResponse.prototype.hasTmgpercentage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double TMGAmount = 4;
 * @return {number}
 */
proto.POSPck.DashboardCountsResponse.prototype.getTmgamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.setTmgamount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearTmgamount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DashboardCountsResponse.prototype.hasTmgamount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated StatsWithDescResponse PopularCategories = 5;
 * @return {!Array<!proto.POSPck.StatsWithDescResponse>}
 */
proto.POSPck.DashboardCountsResponse.prototype.getPopularcategoriesList = function() {
  return /** @type{!Array<!proto.POSPck.StatsWithDescResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.StatsWithDescResponse, 5));
};


/**
 * @param {!Array<!proto.POSPck.StatsWithDescResponse>} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
*/
proto.POSPck.DashboardCountsResponse.prototype.setPopularcategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.POSPck.StatsWithDescResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.StatsWithDescResponse}
 */
proto.POSPck.DashboardCountsResponse.prototype.addPopularcategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.POSPck.StatsWithDescResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearPopularcategoriesList = function() {
  return this.setPopularcategoriesList([]);
};


/**
 * repeated StatsWithDescResponse CustomerTraffic = 6;
 * @return {!Array<!proto.POSPck.StatsWithDescResponse>}
 */
proto.POSPck.DashboardCountsResponse.prototype.getCustomertrafficList = function() {
  return /** @type{!Array<!proto.POSPck.StatsWithDescResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.StatsWithDescResponse, 6));
};


/**
 * @param {!Array<!proto.POSPck.StatsWithDescResponse>} value
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
*/
proto.POSPck.DashboardCountsResponse.prototype.setCustomertrafficList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.POSPck.StatsWithDescResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.StatsWithDescResponse}
 */
proto.POSPck.DashboardCountsResponse.prototype.addCustomertraffic = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.POSPck.StatsWithDescResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.DashboardCountsResponse} returns this
 */
proto.POSPck.DashboardCountsResponse.prototype.clearCustomertrafficList = function() {
  return this.setCustomertrafficList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.StatsWithDescResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.StatsWithDescResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.StatsWithDescResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.StatsWithDescResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsWithDescResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    proto.POSPck.StatsResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.StatsWithDescResponse}
 */
proto.POSPck.StatsWithDescResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.StatsWithDescResponse;
  return proto.POSPck.StatsWithDescResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.StatsWithDescResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.StatsWithDescResponse}
 */
proto.POSPck.StatsWithDescResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.POSPck.StatsResponse;
      reader.readMessage(value,proto.POSPck.StatsResponse.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.StatsWithDescResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.StatsWithDescResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.StatsWithDescResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsWithDescResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.POSPck.StatsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StatsResponse Stats = 1;
 * @return {!Array<!proto.POSPck.StatsResponse>}
 */
proto.POSPck.StatsWithDescResponse.prototype.getStatsList = function() {
  return /** @type{!Array<!proto.POSPck.StatsResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.StatsResponse, 1));
};


/**
 * @param {!Array<!proto.POSPck.StatsResponse>} value
 * @return {!proto.POSPck.StatsWithDescResponse} returns this
*/
proto.POSPck.StatsWithDescResponse.prototype.setStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.POSPck.StatsResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.StatsResponse}
 */
proto.POSPck.StatsWithDescResponse.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.POSPck.StatsResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.StatsWithDescResponse} returns this
 */
proto.POSPck.StatsWithDescResponse.prototype.clearStatsList = function() {
  return this.setStatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.StatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.StatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.StatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    year: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.StatsRequest}
 */
proto.POSPck.StatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.StatsRequest;
  return proto.POSPck.StatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.StatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.StatsRequest}
 */
proto.POSPck.StatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.POSPck.FILTER} */ (reader.readEnum());
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.StatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.StatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.StatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.POSPck.FILTER} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * required FILTER Filter = 1;
 * @return {!proto.POSPck.FILTER}
 */
proto.POSPck.StatsRequest.prototype.getFilter = function() {
  return /** @type {!proto.POSPck.FILTER} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.POSPck.FILTER} value
 * @return {!proto.POSPck.StatsRequest} returns this
 */
proto.POSPck.StatsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.StatsRequest} returns this
 */
proto.POSPck.StatsRequest.prototype.clearFilter = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.StatsRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Year = 2;
 * @return {string}
 */
proto.POSPck.StatsRequest.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.StatsRequest} returns this
 */
proto.POSPck.StatsRequest.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.StatsRequest} returns this
 */
proto.POSPck.StatsRequest.prototype.clearYear = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.StatsRequest.prototype.hasYear = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.StatsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.StatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.StatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.StatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    datasetsList: jspb.Message.toObjectList(msg.getDatasetsList(),
    proto.POSPck.DatasetCounts.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.StatsResponse}
 */
proto.POSPck.StatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.StatsResponse;
  return proto.POSPck.StatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.StatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.StatsResponse}
 */
proto.POSPck.StatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabels(value);
      break;
    case 2:
      var value = new proto.POSPck.DatasetCounts;
      reader.readMessage(value,proto.POSPck.DatasetCounts.deserializeBinaryFromReader);
      msg.addDatasets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.StatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.StatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.StatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.StatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDatasetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.POSPck.DatasetCounts.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string labels = 1;
 * @return {!Array<string>}
 */
proto.POSPck.StatsResponse.prototype.getLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.POSPck.StatsResponse} returns this
 */
proto.POSPck.StatsResponse.prototype.setLabelsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.POSPck.StatsResponse} returns this
 */
proto.POSPck.StatsResponse.prototype.addLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.StatsResponse} returns this
 */
proto.POSPck.StatsResponse.prototype.clearLabelsList = function() {
  return this.setLabelsList([]);
};


/**
 * repeated DatasetCounts datasets = 2;
 * @return {!Array<!proto.POSPck.DatasetCounts>}
 */
proto.POSPck.StatsResponse.prototype.getDatasetsList = function() {
  return /** @type{!Array<!proto.POSPck.DatasetCounts>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.DatasetCounts, 2));
};


/**
 * @param {!Array<!proto.POSPck.DatasetCounts>} value
 * @return {!proto.POSPck.StatsResponse} returns this
*/
proto.POSPck.StatsResponse.prototype.setDatasetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.POSPck.DatasetCounts=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.DatasetCounts}
 */
proto.POSPck.StatsResponse.prototype.addDatasets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.POSPck.DatasetCounts, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.StatsResponse} returns this
 */
proto.POSPck.StatsResponse.prototype.clearDatasetsList = function() {
  return this.setDatasetsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.DatasetCounts.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.DatasetCounts.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.DatasetCounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.DatasetCounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DatasetCounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dataList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.DatasetCounts}
 */
proto.POSPck.DatasetCounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.DatasetCounts;
  return proto.POSPck.DatasetCounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.DatasetCounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.DatasetCounts}
 */
proto.POSPck.DatasetCounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.DatasetCounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.DatasetCounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.DatasetCounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.DatasetCounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      2,
      f
    );
  }
};


/**
 * required string label = 1;
 * @return {string}
 */
proto.POSPck.DatasetCounts.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.DatasetCounts} returns this
 */
proto.POSPck.DatasetCounts.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.DatasetCounts} returns this
 */
proto.POSPck.DatasetCounts.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.DatasetCounts.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int32 data = 2;
 * @return {!Array<number>}
 */
proto.POSPck.DatasetCounts.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.POSPck.DatasetCounts} returns this
 */
proto.POSPck.DatasetCounts.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.POSPck.DatasetCounts} returns this
 */
proto.POSPck.DatasetCounts.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.DatasetCounts} returns this
 */
proto.POSPck.DatasetCounts.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ShopInvoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ShopInvoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ShopInvoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopInvoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ShopInvoicesRequest}
 */
proto.POSPck.ShopInvoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ShopInvoicesRequest;
  return proto.POSPck.ShopInvoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ShopInvoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ShopInvoicesRequest}
 */
proto.POSPck.ShopInvoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ShopInvoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ShopInvoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ShopInvoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopInvoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 ShopID = 1;
 * @return {number}
 */
proto.POSPck.ShopInvoicesRequest.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopInvoicesRequest} returns this
 */
proto.POSPck.ShopInvoicesRequest.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicesRequest} returns this
 */
proto.POSPck.ShopInvoicesRequest.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicesRequest.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.ShopInvoicResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.ShopInvoicResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.ShopInvoicResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopInvoicResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timestamp: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    subtotal: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    services: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    vat: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    grandtotal: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.ShopInvoicResponse}
 */
proto.POSPck.ShopInvoicResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.ShopInvoicResponse;
  return proto.POSPck.ShopInvoicResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.ShopInvoicResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.ShopInvoicResponse}
 */
proto.POSPck.ShopInvoicResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvoiceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubtotal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServices(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGrandtotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.ShopInvoicResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.ShopInvoicResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.ShopInvoicResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.ShopInvoicResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * required int64 InvoiceID = 1;
 * @return {number}
 */
proto.POSPck.ShopInvoicResponse.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setInvoiceid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearInvoiceid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasInvoiceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string TimeStamp = 2;
 * @return {string}
 */
proto.POSPck.ShopInvoicResponse.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 Subtotal = 3;
 * @return {number}
 */
proto.POSPck.ShopInvoicResponse.prototype.getSubtotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setSubtotal = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearSubtotal = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasSubtotal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string Services = 4;
 * @return {string}
 */
proto.POSPck.ShopInvoicResponse.prototype.getServices = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setServices = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearServices = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasServices = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required float VAT = 5;
 * @return {number}
 */
proto.POSPck.ShopInvoicResponse.prototype.getVat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setVat = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearVat = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasVat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required double GrandTotal = 6;
 * @return {number}
 */
proto.POSPck.ShopInvoicResponse.prototype.getGrandtotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.setGrandtotal = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.ShopInvoicResponse} returns this
 */
proto.POSPck.ShopInvoicResponse.prototype.clearGrandtotal = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.ShopInvoicResponse.prototype.hasGrandtotal = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.TransactionsOfInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.TransactionsOfInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.TransactionsOfInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoiceid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.TransactionsOfInvoiceRequest}
 */
proto.POSPck.TransactionsOfInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.TransactionsOfInvoiceRequest;
  return proto.POSPck.TransactionsOfInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.TransactionsOfInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.TransactionsOfInvoiceRequest}
 */
proto.POSPck.TransactionsOfInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvoiceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.TransactionsOfInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.TransactionsOfInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.TransactionsOfInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 InvoiceID = 1;
 * @return {number}
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.getInvoiceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRequest} returns this
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.setInvoiceid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRequest} returns this
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.clearInvoiceid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRequest.prototype.hasInvoiceid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.TransactionsOfInvoiceRespone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.TransactionsOfInvoiceRespone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.TransactionsOfInvoiceRespone.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timestamp: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    product: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    quantity: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    vat: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    subtotal: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    grandtotal: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone}
 */
proto.POSPck.TransactionsOfInvoiceRespone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.TransactionsOfInvoiceRespone;
  return proto.POSPck.TransactionsOfInvoiceRespone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.TransactionsOfInvoiceRespone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone}
 */
proto.POSPck.TransactionsOfInvoiceRespone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubtotal(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGrandtotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.TransactionsOfInvoiceRespone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.TransactionsOfInvoiceRespone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.TransactionsOfInvoiceRespone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * required int64 OrderID = 1;
 * @return {number}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setOrderid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearOrderid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasOrderid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string TimeStamp = 2;
 * @return {string}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Product = 3;
 * @return {string}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setProduct = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearProduct = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string Quantity = 4;
 * @return {string}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required float VAT = 5;
 * @return {number}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getVat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setVat = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearVat = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasVat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int64 Subtotal = 6;
 * @return {number}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getSubtotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setSubtotal = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearSubtotal = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasSubtotal = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required double GrandTotal = 7;
 * @return {number}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.getGrandtotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.setGrandtotal = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.TransactionsOfInvoiceRespone} returns this
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.clearGrandtotal = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.TransactionsOfInvoiceRespone.prototype.hasGrandtotal = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.MallStructureResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.MallStructureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.MallStructureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.MallStructureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.MallStructureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalareas: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    totalshops: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    rented: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    integrated: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    areasList: jspb.Message.toObjectList(msg.getAreasList(),
    proto.POSPck.Areas.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.MallStructureResponse}
 */
proto.POSPck.MallStructureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.MallStructureResponse;
  return proto.POSPck.MallStructureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.MallStructureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.MallStructureResponse}
 */
proto.POSPck.MallStructureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalareas(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalshops(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRented(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntegrated(value);
      break;
    case 5:
      var value = new proto.POSPck.Areas;
      reader.readMessage(value,proto.POSPck.Areas.deserializeBinaryFromReader);
      msg.addAreas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.MallStructureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.MallStructureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.MallStructureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.MallStructureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAreasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.POSPck.Areas.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalAreas = 1;
 * @return {number}
 */
proto.POSPck.MallStructureResponse.prototype.getTotalareas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.setTotalareas = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.clearTotalareas = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MallStructureResponse.prototype.hasTotalareas = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 TotalShops = 2;
 * @return {number}
 */
proto.POSPck.MallStructureResponse.prototype.getTotalshops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.setTotalshops = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.clearTotalshops = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MallStructureResponse.prototype.hasTotalshops = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 Rented = 3;
 * @return {number}
 */
proto.POSPck.MallStructureResponse.prototype.getRented = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.setRented = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.clearRented = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MallStructureResponse.prototype.hasRented = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 Integrated = 4;
 * @return {number}
 */
proto.POSPck.MallStructureResponse.prototype.getIntegrated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.setIntegrated = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.clearIntegrated = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MallStructureResponse.prototype.hasIntegrated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Areas Areas = 5;
 * @return {!Array<!proto.POSPck.Areas>}
 */
proto.POSPck.MallStructureResponse.prototype.getAreasList = function() {
  return /** @type{!Array<!proto.POSPck.Areas>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.Areas, 5));
};


/**
 * @param {!Array<!proto.POSPck.Areas>} value
 * @return {!proto.POSPck.MallStructureResponse} returns this
*/
proto.POSPck.MallStructureResponse.prototype.setAreasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.POSPck.Areas=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.Areas}
 */
proto.POSPck.MallStructureResponse.prototype.addAreas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.POSPck.Areas, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.MallStructureResponse} returns this
 */
proto.POSPck.MallStructureResponse.prototype.clearAreasList = function() {
  return this.setAreasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.Areas.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.Areas.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.Areas} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.Areas.toObject = function(includeInstance, msg) {
  var f, obj = {
    floornumber: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    numberofshops: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    active: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    integrated: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    closed: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.Areas}
 */
proto.POSPck.Areas.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.Areas;
  return proto.POSPck.Areas.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.Areas} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.Areas}
 */
proto.POSPck.Areas.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFloornumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofshops(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActive(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntegrated(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClosed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.Areas.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.Areas.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.Areas} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.Areas.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 FloorNumber = 1;
 * @return {number}
 */
proto.POSPck.Areas.prototype.getFloornumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.setFloornumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.clearFloornumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Areas.prototype.hasFloornumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 NumberOfShops = 2;
 * @return {number}
 */
proto.POSPck.Areas.prototype.getNumberofshops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.setNumberofshops = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.clearNumberofshops = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Areas.prototype.hasNumberofshops = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 Active = 3;
 * @return {number}
 */
proto.POSPck.Areas.prototype.getActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.clearActive = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Areas.prototype.hasActive = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 Integrated = 4;
 * @return {number}
 */
proto.POSPck.Areas.prototype.getIntegrated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.setIntegrated = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.clearIntegrated = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Areas.prototype.hasIntegrated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 Closed = 5;
 * @return {number}
 */
proto.POSPck.Areas.prototype.getClosed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.setClosed = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Areas} returns this
 */
proto.POSPck.Areas.prototype.clearClosed = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Areas.prototype.hasClosed = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.AllShopsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.AllShopsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.AllShopsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.AllShopsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    floornumber: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.AllShopsRequest}
 */
proto.POSPck.AllShopsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.AllShopsRequest;
  return proto.POSPck.AllShopsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.AllShopsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.AllShopsRequest}
 */
proto.POSPck.AllShopsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFloornumber(value);
      break;
    case 2:
      var value = /** @type {!proto.POSPck.SHOP_STATUS} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.AllShopsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.AllShopsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.AllShopsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.AllShopsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {!proto.POSPck.SHOP_STATUS} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * required int32 FloorNumber = 1;
 * @return {number}
 */
proto.POSPck.AllShopsRequest.prototype.getFloornumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.AllShopsRequest} returns this
 */
proto.POSPck.AllShopsRequest.prototype.setFloornumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.AllShopsRequest} returns this
 */
proto.POSPck.AllShopsRequest.prototype.clearFloornumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.AllShopsRequest.prototype.hasFloornumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SHOP_STATUS Status = 2;
 * @return {!proto.POSPck.SHOP_STATUS}
 */
proto.POSPck.AllShopsRequest.prototype.getStatus = function() {
  return /** @type {!proto.POSPck.SHOP_STATUS} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.POSPck.SHOP_STATUS} value
 * @return {!proto.POSPck.AllShopsRequest} returns this
 */
proto.POSPck.AllShopsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.AllShopsRequest} returns this
 */
proto.POSPck.AllShopsRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.AllShopsRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.POSPck.AllShopsResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.AllShopsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.AllShopsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.AllShopsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.AllShopsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopsList: jspb.Message.toObjectList(msg.getShopsList(),
    proto.POSPck.Shop.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.AllShopsResponse}
 */
proto.POSPck.AllShopsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.AllShopsResponse;
  return proto.POSPck.AllShopsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.AllShopsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.AllShopsResponse}
 */
proto.POSPck.AllShopsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.POSPck.Shop;
      reader.readMessage(value,proto.POSPck.Shop.deserializeBinaryFromReader);
      msg.addShops(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.AllShopsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.AllShopsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.AllShopsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.AllShopsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.POSPck.Shop.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Shop Shops = 5;
 * @return {!Array<!proto.POSPck.Shop>}
 */
proto.POSPck.AllShopsResponse.prototype.getShopsList = function() {
  return /** @type{!Array<!proto.POSPck.Shop>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.POSPck.Shop, 5));
};


/**
 * @param {!Array<!proto.POSPck.Shop>} value
 * @return {!proto.POSPck.AllShopsResponse} returns this
*/
proto.POSPck.AllShopsResponse.prototype.setShopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.POSPck.Shop=} opt_value
 * @param {number=} opt_index
 * @return {!proto.POSPck.Shop}
 */
proto.POSPck.AllShopsResponse.prototype.addShops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.POSPck.Shop, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.POSPck.AllShopsResponse} returns this
 */
proto.POSPck.AllShopsResponse.prototype.clearShopsList = function() {
  return this.setShopsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.Shop.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.Shop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.Shop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.Shop.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    shopid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    area: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    percentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    contractstart: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    contractend: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.Shop}
 */
proto.POSPck.Shop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.Shop;
  return proto.POSPck.Shop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.Shop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.Shop}
 */
proto.POSPck.Shop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArea(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {!proto.POSPck.SHOP_STATUS} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractstart(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.Shop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.Shop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.Shop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.Shop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!proto.POSPck.SHOP_STATUS} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * required string ShopName = 1;
 * @return {string}
 */
proto.POSPck.Shop.prototype.getShopname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setShopname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearShopname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasShopname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 ShopID = 2;
 * @return {number}
 */
proto.POSPck.Shop.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setShopid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearShopid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasShopid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 Area = 3;
 * @return {number}
 */
proto.POSPck.Shop.prototype.getArea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setArea = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearArea = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasArea = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float Percentage = 4;
 * @return {number}
 */
proto.POSPck.Shop.prototype.getPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setPercentage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearPercentage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string Type = 5;
 * @return {string}
 */
proto.POSPck.Shop.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required SHOP_STATUS Status = 6;
 * @return {!proto.POSPck.SHOP_STATUS}
 */
proto.POSPck.Shop.prototype.getStatus = function() {
  return /** @type {!proto.POSPck.SHOP_STATUS} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/**
 * @param {!proto.POSPck.SHOP_STATUS} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string ContractStart = 7;
 * @return {string}
 */
proto.POSPck.Shop.prototype.getContractstart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setContractstart = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearContractstart = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasContractstart = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string ContractEnd = 8;
 * @return {string}
 */
proto.POSPck.Shop.prototype.getContractend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.setContractend = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.Shop} returns this
 */
proto.POSPck.Shop.prototype.clearContractend = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.Shop.prototype.hasContractend = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.POSPck.MessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.POSPck.MessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.POSPck.MessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.MessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    done: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.POSPck.MessageResponse}
 */
proto.POSPck.MessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.POSPck.MessageResponse;
  return proto.POSPck.MessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.POSPck.MessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.POSPck.MessageResponse}
 */
proto.POSPck.MessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDone(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.POSPck.MessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.POSPck.MessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.POSPck.MessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.POSPck.MessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string Message = 1;
 * @return {string}
 */
proto.POSPck.MessageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MessageResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool Done = 2;
 * @return {boolean}
 */
proto.POSPck.MessageResponse.prototype.getDone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.setDone = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.clearDone = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MessageResponse.prototype.hasDone = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 ID = 3;
 * @return {number}
 */
proto.POSPck.MessageResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.POSPck.MessageResponse} returns this
 */
proto.POSPck.MessageResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.POSPck.MessageResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.POSPck.FILTER = {
  WEEK: 1,
  MONTH: 2,
  YEAR: 3
};

/**
 * @enum {number}
 */
proto.POSPck.SHOP_STATUS = {
  RENTED: 1,
  UNRENTED: 2,
  INTEGRATED: 3,
  CLOSED: 4,
  ACTIVE: 5
};

goog.object.extend(exports, proto.POSPck);
